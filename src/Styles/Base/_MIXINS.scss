// =============================================================================
// UI-KOMPONENTEN MIXINS UND FUNKTIONEN
// Datei: _mixins.scss
// =============================================================================

// Import der Variablen für Mixin-Zugriff
@use 'VARIABLES' as *;
@use 'sass:map';

// =============================================================================
// RESPONSIVE UND UTILITY MIXINS
// =============================================================================

// Responsive Breakpoint Mixin
@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

// Breakpoint Mixin (für bestehende Kompatibilität)
@mixin breakpoint($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

// Breakpoint Max Mixin
@mixin breakpoint-max($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map.get($breakpoints, $breakpoint) - 1px}) {
      @content;
    }
  }
}

// Container Mixin
@mixin container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: $spacing-md;
  padding-right: $spacing-md;

  @include breakpoint('lg') {
    padding-left: $spacing-lg;
    padding-right: $spacing-lg;
  }
}

// Flex Utility Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Button Reset Mixin
@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

// Themed Background Mixin
@mixin themed-background {
  background: var(--color-bg-primary);
  color: var(--color-text);
}

// =============================================================================
// BASIS STYLING MIXINS
// =============================================================================

// Hintergrund Mixin für verschiedene Bereiche
@mixin background-base($type: 'primary') {
  @if $type =='primary' {
    background: var(--gradient-primary);
  }

  @else if $type =='card' {
    background: var(--gradient-card);
  }

  @else if $type =='overlay' {
    background: var(--color-bg-overlay);
  }

  @else if $type =='button' {
    background: var(--gradient-button);
  }
}

// Text Gradient Mixin für Headlines und spezielle Texte
@mixin text-gradient($gradient: null) {
  @if $gradient {
    background: $gradient;
  }

  @else {
    background: var(--gradient-text);
  }

  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  color: transparent;
}

// Glow Effekt Mixin für leuchtende Elemente
@mixin glow-effect($intensity: 'normal', $color: null) {
  $glow-color: if($color, $color, var(--color-glow));

  @if $intensity =='subtle' {
    box-shadow: 0 0 10px rgba(162, 89, 255, 0.2);
  }

  @else if $intensity =='normal' {
    box-shadow: var(--shadow-glow);
  }

  @else if $intensity =='intense' {
    box-shadow: var(--shadow-glow-intense);
  }

  transition: box-shadow var(--transition-normal) ease;
}

// =============================================================================
// BUTTON MIXINS
// =============================================================================

// Universelles Button Mixin mit Varianten und Größen
@mixin button-style($variant: 'primary', $size: 'md') {
  border: none;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  font-weight: 600;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: all var(--transition-normal) ease;
  position: relative;
  overflow: hidden;

  // Größenvarianten
  @if $size =='sm' {
    padding: 8px 16px;
    font-size: 0.875rem;
  }

  @else if $size =='md' {
    padding: 12px 24px;
    font-size: 1rem;
  }

  @else if $size =='lg' {
    padding: 16px 32px;
    font-size: 1.125rem;
  }

  @else if $size =='xl' {
    padding: 20px 40px;
    font-size: 1.25rem;
  }

  // Stil-Varianten
  @if $variant =='primary' {
    @include background-base('button');
    color: var(--color-text-primary);
    border: 1px solid var(--color-primary);

    &:hover {
      @include glow-effect('normal');
      transform: translateY(-2px);
      border-color: var(--color-primary-light);
    }

    &:active {
      transform: translateY(0);
    }
  }

  @else if $variant =='secondary' {
    background: var(--color-button-secondary);
    color: var(--color-text-primary);
    border: 1px solid var(--color-border);

    &:hover {
      background: var(--color-bg-tertiary);
      border-color: var(--color-primary);
    }
  }

  @else if $variant =='ghost' {
    background: transparent;
    color: var(--color-primary);
    border: 1px solid var(--color-primary);

    &:hover {
      background: var(--color-primary);
      color: var(--color-text-primary);
      @include glow-effect('subtle');
    }
  }

  @else if $variant =='outline' {
    background: transparent;
    color: var(--color-text-primary);
    border: 1px solid var(--color-border);

    &:hover {
      border-color: var(--color-primary);
      @include glow-effect('subtle');
    }
  }

  // Shimmer Effekt für Primary Buttons
  @if $variant =='primary' {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg,
          transparent,
          rgba(255, 255, 255, 0.1),
          transparent);
      transition: left var(--transition-slow) ease;
    }

    &:hover::before {
      left: 100%;
    }
  }
}

// =============================================================================
// CARD UND CONTAINER MIXINS
// =============================================================================

// Card Mixin für Content-Bereiche
@mixin card-style($variant: 'default', $hover: true) {
  @include background-base('card');
  border-radius: var(--border-radius-lg);
  padding: 24px;
  border: 1px solid var(--color-border);
  transition: all var(--transition-normal) ease;

  @if $variant =='elevated' {
    box-shadow: var(--shadow-lg);
  }

  @else if $variant =='glow' {
    @include glow-effect('subtle');
  }

  @else if $variant =='minimal' {
    border: none;
    background: rgba(26, 12, 64, 0.3);
  }

  @if $hover {
    &:hover {
      transform: translateY(-4px);
      @include glow-effect('normal');
      border-color: var(--color-primary);
    }
  }
}

// Container Mixin für Hauptbereiche
@mixin container-style($type: 'section') {
  @if $type =='section' {
    @include background-base('primary');
    min-height: 100vh;
    position: relative;

    // Grid Overlay für futuristischen Look
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image:
        linear-gradient(rgba(3, 0, 21, 0.8) 1px, transparent 1px),
        linear-gradient(90deg, rgba(3, 0, 21, 0.8) 1px, transparent 1px);
      background-size: 20px 20px;
      pointer-events: none;
      opacity: 0.3;
    }
  }

  @else if $type =='content' {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    position: relative;
    z-index: 1;
  }

  @else if $type =='full-width' {
    width: 100%;
    position: relative;
    z-index: 1;
  }
}

// =============================================================================
// FORM ELEMENT MIXINS
// =============================================================================

// Input Styling Mixin
@mixin input-style($variant: 'default') {
  background: var(--color-input-bg);
  border: 1px solid var(--color-input-border);
  border-radius: var(--border-radius-md);
  padding: 12px 16px;
  color: var(--color-text-primary);
  font-size: 1rem;
  transition: all var(--transition-normal) ease;
  width: 100%;

  &::placeholder {
    color: var(--color-text-muted);
  }

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    @include glow-effect('subtle');
  }

  @if $variant =='glow' {
    animation: borderGlow 2s ease-in-out infinite;
  }

  @else if $variant =='large' {
    padding: 16px 20px;
    font-size: 1.125rem;
  }
}

// Textarea Mixin
@mixin textarea-style($variant: 'default') {
  @include input-style($variant);
  min-height: 120px;
  resize: vertical;
}

// =============================================================================
// TYPOGRAFIE MIXINS
// =============================================================================

// Heading Styling Mixin
@mixin heading-style($level: 1, $gradient: true) {
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 1rem;

  @if $level ==1 {
    font-size: clamp(2rem, 5vw, 3.5rem);
  }

  @else if $level ==2 {
    font-size: clamp(1.5rem, 4vw, 2.5rem);
  }

  @else if $level ==3 {
    font-size: clamp(1.25rem, 3vw, 2rem);
  }

  @else if $level ==4 {
    font-size: clamp(1.125rem, 2.5vw, 1.5rem);
  }

  @else if $level ==5 {
    font-size: clamp(1rem, 2vw, 1.25rem);
  }

  @else if $level ==6 {
    font-size: 1rem;
  }

  @if $gradient {
    @include text-gradient();
  }

  @else {
    color: var(--color-text-primary);
  }
}

// Text Styling Mixin
@mixin text-style($variant: 'body') {
  @if $variant =='body' {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--color-text-primary);
  }

  @else if $variant =='caption' {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }

  @else if $variant =='small' {
    font-size: 0.75rem;
    color: var(--color-text-muted);
  }

  @else if $variant =='lead' {
    font-size: 1.25rem;
    line-height: 1.5;
    color: var(--color-text-primary);
  }
}

// =============================================================================
// ICON UND INTERAKTIVE ELEMENT MIXINS
// =============================================================================

// Icon Styling mit optionalem Glow
@mixin icon-style($size: 24px, $glow: false) {
  width: $size;
  height: $size;
  color: var(--color-text-primary);
  transition: all var(--transition-normal) ease;

  @if $glow {
    filter: drop-shadow(0 0 5px var(--color-shadow-primary));

    &:hover {
      filter: drop-shadow(0 0 10px var(--color-glow));
      transform: scale(1.1);
    }
  }
}

// Link Styling Mixin
@mixin link-style($variant: 'default') {
  color: var(--color-primary);
  text-decoration: none;
  transition: all var(--transition-normal) ease;

  @if $variant =='default' {
    &:hover {
      color: var(--color-primary-light);
      text-decoration: underline;
    }
  }

  @else if $variant =='glow' {
    &:hover {
      color: var(--color-primary-light);
      text-shadow: 0 0 10px var(--color-glow);
    }
  }

  @else if $variant =='subtle' {
    color: var(--color-text-secondary);

    &:hover {
      color: var(--color-primary);
    }
  }
}